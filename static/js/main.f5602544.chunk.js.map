{"version":3,"sources":["Components/Data/bilder/logga_small.png","Components/Style/CommonCSSRoules.js","Components/Style/MainStyle.js","Components/Style/NavBarStyle.js","Components/Style/TextStyle.js","Components/Data/Axios.js","Components/Data/Storage.js","Components/Data/NavRouteName.js","Components/Data/AppUrl.js","Components/Data/Spinner.js","Components/Data/Button.js","Components/Data/CommonFunctions.js","Components/Structure/HeaderContent.js","Components/Structure/Development.js","Components/Structure/FooterContent.js","Components/Data/DateTime.js","Components/Structure/MyProjects.js","Components/Structure/AbouteMe.js","MainPage.js","MainApp.js","serviceWorker.js","index.js"],"names":["module","exports","color","MainStyle","body","styled","section","MainContentStyle","header","headerEndLine","contentsNavBar","innerContentsContainer","PageMainContainerStyle","mainPage","SubPageContainerStyle","outerContentsContainer","container","sidebar","mainContent","textParagraph","HeaderStyle","appLogoNoLink","img","appLogoLink","FooterStyle","footerContainer","col1","h2","col2","col3","NavBarStyle","topBarContainer","contentContainer","CommonBtnStyle","btn","button","btnMarker","div","btnHeadline","p","specificBtnStyle","logoBtn","logo","btnInactive","backgroundColor","btnActive","lastNavPageContainer","lastNavPageInactive","lastNavPageActive","sideBarBtn","margin","CommonTextStyle","headLines","h1","axiosGet","axios","get","then","response","console","log","data","incommingTextObj","incommingTextObj$","next","updateIncommingTextObj","catch","error","navRouteName","name","route","id","subHead","headLine1","headLine2","headLine3","runAppUrl","getUrlAdress","window","location","pathname","setInterval","gotoPage$","BehaviorSubject","Spinner","props","str","className","Button","groupName","styleBtn","content","onClickFunction","onClick","style","runGoToPage","e","targetPage","target","gotoPage","updateGotoPage","HeaderContent","useState","appName","updateAppName","redirectionPath","useEffect","src","fredrikLogo","alt","Development","textObj","updateTextObj","newTextObj","updateNewTextObj","subscribe","services","lastNavPage","undefined","FooterContent","startDateTime","today","Date","dd","getDate","month","Array","monthname","getMonth","yyyy","getFullYear","h","getHours","m","getMinutes","i","checkTime","dateTimeStr","setTimeout","addDateTime","MyProjects","AbouteMe","aboutMe","MainPage","textMain","MainApp","pageRoute","setPageRoute","Helmet","charSet","basename","to","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f5602544.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logga_small.20fa48e6.png\";","export const color = {\r\n    darkBlackDarkGreen: '#333',\r\n    darkOrange: 'rgb(255, 140, 0)',\r\n    grey: 'grey',\r\n}","/* ================================================== General Style Rouls ==================================================\r\nImports module */\r\nimport styled from 'styled-components';\r\nimport { color } from'./CommonCSSRoules';\r\n\r\nexport let MainStyle = {\r\n  body: styled.section`\r\n    margin-top: -8px;\r\n    margin-left: calc(50% - 690px);\r\n    width: 1380px;\r\n    height: 0px;\r\n    -webkit-box-shadow: -53px -33px 294px 200px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: -53px -33px 294px 200px rgba(0,0,0,0.75);\r\n    box-shadow: -53px -33px 294px 200px rgba(0,0,0,0.75);\r\n    color: white;\r\n    `,\r\n}\r\nexport let MainContentStyle = {\r\n  header: styled.section`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 75px;\r\n    background-color: none;\r\n  `,\r\n  headerEndLine: styled.section`\r\n    width: 90%;\r\n    position: relative;\r\n    height: 20px;\r\n    left: 138px;\r\n    top: 0px;\r\n    background-color: ${color.darkOrange};\r\n  `,\r\n  contentsNavBar: styled.section`\r\n    width: 200px;\r\n    `,\r\n  innerContentsContainer: styled.section`\r\n    width: 1100px;\r\n    `,\r\n}\r\nexport let PageMainContainerStyle = {\r\n  mainPage: styled.section`\r\n    display: flex;\r\n    width: 1225px;\r\n    flex-direction: column;\r\n    margin-left: 75px;\r\n    margin-top: 90px;\r\n    background-color: ${color.darkBlackDarkGreen};\r\n    border-radius: 70px;\r\n  `,\r\n}\r\nexport let SubPageContainerStyle = {\r\n  outerContentsContainer: styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: -10px;\r\n  `,\r\n  container: styled.section`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: row;\r\n    margin-top: 100px;\r\n  `,\r\n  sidebar: styled.section`\r\n    display: flex;\r\n    width: 30%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: ${color.darkOrange};\r\n    border-radius: 70px 0 0 70px;\r\n    padding-bottom: 50px;\r\n    margin-left: 75px;\r\n  `,\r\n  mainContent: styled.section`\r\n    display: flex;\r\n    width: 810px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: ${color.darkBlackDarkGreen};\r\n    border-radius: 0 70px 70px 0;\r\n  `,\r\n  textParagraph: styled.section`\r\n    width: 80%;\r\n    margin-left: calc(50% - 500px);\r\n    font-size: 15px;\r\n  `,\r\n}\r\nexport let HeaderStyle = {\r\n  appLogoNoLink: styled.img`\r\n    position: relative;\r\n    left: 0;\r\n    width: 16.5%;\r\n    height: 158%;\r\n  `,\r\n  appLogoLink: styled.img`\r\n    position: relative;\r\n    left: 0;\r\n    width: 80%;\r\n  `,\r\n}\r\nexport let FooterStyle = {\r\n  footerContainer: styled.section`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 1380px;\r\n    height: 100px;\r\n    color: black;\r\n    position: fixed;\r\n    bottom: 0;\r\n    `,\r\n  col1: styled.h2`\r\n    width: 30%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    `,\r\n  col2: styled.h2`\r\n    width: 30%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    `,\r\n  col3: styled.h2`\r\n    width: 30%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    `,\r\n}\r\n","/* ================================================== Style Rouls for Auth ==================================================\r\nImports module */\r\nimport styled from 'styled-components';\r\nimport { color } from'./CommonCSSRoules';\r\n\r\nimport { from } from 'rxjs';\r\nexport let NavBarStyle = {\r\n  topBarContainer: styled.section`\r\n    width: 65%;\r\n    background-color: ${color.darkBlackDarkGreen};\r\n    border-bottom-left-radius: 30px;\r\n    display: flex;\r\n    flex-direction: row;\r\n  `,\r\n  contentContainer: styled.section`\r\n    width: 650px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-left: 10%;\r\n  `,\r\n}\r\n// ============================== Btton Style ==============================\r\nexport let CommonBtnStyle = {\r\n  btn: styled.button`\r\n    height: 60px;\r\n    padding: 8px 12px;\r\n    border: none;\r\n    border-radius: 30px;\r\n  `,\r\n  btnMarker: styled.div`\r\n    width: 10px;\r\n    background-color: ${ color.darkOrange };\r\n    color: ${ color.darkOrange };\r\n    height: 10px;\r\n    margin-top: 6px;\r\n    margin-left: 49%;\r\n  `,\r\n  btnHeadline: styled.p`\r\n    color: white;\r\n    text-align: center;\r\n    padding: 14px 16px;\r\n    font-size: 15px;\r\n    font-family: Roboto;\r\n    font-style: normal;\r\n    font-weight: 900;\r\n    right: 12px;\r\n    letter-spacing: 5px;\r\n    margin: 0;\r\n  `,\r\n}\r\nexport const specificBtnStyle = {\r\n  logoBtn: styled.button`\r\n    background: none;\r\n    border: none;\r\n    margin-left: -34px;\r\n  `,\r\n  logo: styled.div`\r\n    background: none;\r\n    border: none;\r\n  `,\r\n  btnInactive: {\r\n    backgroundColor: color.darkBlackDarkGreen,\r\n  },\r\n  btnActive: {\r\n    backgroundColor: color.darkOrange,\r\n  },\r\n  lastNavPageContainer: styled.section`\r\n    margin-top: 7px;\r\n  `,\r\n  lastNavPageInactive: {\r\n    backgroundColor: color.darkBlackDarkGreen,\r\n  },\r\n  lastNavPageActive: {\r\n    backgroundColor: color.darkOrange,\r\n  }, \r\n  sideBarBtn: {\r\n    margin: '40px 20px 20px 20px',\r\n    backgroundColor: color.darkBlackDarkGreen,\r\n  },\r\n}","/* ================================================== Text Style Rouls ==================================================\r\nImports module */\r\nimport styled from 'styled-components';\r\n\r\nexport let CommonTextStyle = {\r\n  headLines: styled.h1`\r\n    font-size: 30px;\r\n    width: 100%;\r\n    text-align: center;\r\n    /* margin-left: calc(50% - 100px); */\r\n  `,\r\n  textParagraph: styled.section`\r\n    width: 1000px;\r\n    margin-left: calc(50% - 500px);\r\n    margin-bottom: 90px;\r\n    font-size: 15px;\r\n`,\r\n};","/* ================================================== Axios ==================================================\r\nImports module */\r\nimport axios from 'axios';\r\n\r\n// Import inportant components for the specific page\r\nimport { updateIncommingTextObj } from'./Storage';\r\n\r\n// Initialize container\r\n\r\n//const getUrlState = useSelector(state => state.appUrl);\r\n//const backendURL = 'http://localhost:3001/GetText';\r\nconst backendURL = 'http://fredrikipnr.mina-projekt.se:3001/GetText';\r\n\r\nexport let axiosGet = () => {\r\n    axios.get(backendURL).then(response => {\r\n        console.log(\"axiosGet -> response\", response.data)\r\n        // Only send the current object into correct components\r\n        updateIncommingTextObj(response.data);\r\n    }).\r\n    catch(error => {});\r\n}\r\n\r\n/* export let axiosPost = (postType, bodyData) => {      \r\n    axios.post(\r\n        `${backendURL}/SQLData/${ type }`\r\n        , sendToSqlBackend ).then(response => {\r\n          \r\n    }).catch(error => {});\r\n} */","/* ==================================================  Props handler ==================================================\r\nImports module */\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\nimport { axiosGet } from './Axios';\r\n\r\nimport { runAppUrl } from'./AppUrl';\r\n\r\nconst incommingTextObj = {};\r\nconst gotoPage = '';\r\n\r\n// polling start the server every 1 second\r\nsetInterval(() => {\r\n    axiosGet();\r\n}, 1000);\r\n//===============================================\r\n\r\nexport const gotoPage$ = new BehaviorSubject(gotoPage);\r\nexport const appUrl$ = new BehaviorSubject(gotoPage);\r\nexport const incommingTextObj$ = new BehaviorSubject(incommingTextObj);\r\n\r\nexport function updateIncommingTextObj(incommingTextObj){\r\n    console.log(\"updateSavedSQLData -> incommingTextObj\", incommingTextObj)\r\n    if(incommingTextObj) incommingTextObj$.next(incommingTextObj);\r\n}\r\n\r\nexport function updateAppUrl(appUrl){\r\n    if(appUrl) appUrl$.next(appUrl);\r\n}\r\n\r\nexport function updateGotoPage(gotoPage){    \r\n    console.log(\"updateGotoPage -> gotoPage\", gotoPage)\r\n    if(gotoPage) gotoPage$.next(gotoPage);\r\n}","export const navRouteName = {\r\n    headLine0: { name: 'Welcome', route: 'Welcome', id: 'welcome' },\r\n\r\n    headLine1: { name: 'Utveckling', route: 'Utveckling', id: 'developing', subHead: {\r\n            headLine1: {name: 'Frontend (Webb)', route: 'Frontend', id: 'frontend'},\r\n            headLine2: {name: 'Backend (Webb)', route: 'Backend', id: 'backend'},\r\n            headLine3: {name: '3D Modellering', route: '3dMod', id: '3dMod'},\r\n        }\r\n    },\r\n    headLine2:  { name: 'Mina Projekt', route: 'MinaProjekt', id: 'myProjects', subHead: {\r\n            headLine1: {name: '', route: '', id: ''},\r\n            headLine2: {name: '', route: '', id: ''},\r\n            headLine3: {name: '', route: '', id: ''},\r\n        }\r\n    },\r\n    lastHeadLine:  { name: 'Om Mig', route: 'OmMig', id: 'omMig' },\r\n}","import { navRouteName } from'./NavRouteName';\r\n\r\nimport { from } from \"rxjs\";\r\nexport const runAppUrl = () => {\r\n    let getUrlAdress = '';\r\n    getUrlAdress = window.location.pathname;\r\n    if(getUrlAdress === '/FredrikWebbApp') window.location.pathname = navRouteName.headLine0.name;\r\n    return getUrlAdress;\r\n}","/* ================================================== Spinner ==================================================\r\nImports module */\r\nimport React from 'react';\r\n\r\n// Import CSS rouls\r\nimport '../Style/Spinner.scss';\r\n\r\n// Import inportant components for the specific page\r\nexport let Spinner = (props) => {\r\n    return(\r\n        <>\r\n            { props.str } <span className=\"spinner spinner-dark\"></span>\r\n        </>\r\n    );\r\n}\r\nexport default Spinner;","/* ================================================== HeadBar ==================================================\r\nImports module */\r\nimport React from 'react';\r\n\r\n// Import inportant components for the specific page\r\nimport { CommonBtnStyle } from '../Style/NavBarStyle';\r\n\r\nexport let Button = (props) => {\r\n    const { groupName, styleBtn, content, onClickFunction, id } = props;\r\n    console.log(\"Button -> props\", props)\r\n    return(\r\n        <>\r\n            <CommonBtnStyle.btn id={ id } onClick={ onClickFunction } style={ styleBtn }>\r\n               { content }\r\n            </CommonBtnStyle.btn>\r\n        </>\r\n    );\r\n}","import { updateGotoPage } from'./Storage';\r\nexport const runGoToPage = (e) => {\r\n    const targetBtn = e.target;\r\n    const targetPage = targetBtn.id;\r\n    console.log(\"runGoToPage -> targetPage\", targetPage)\r\n    updateGotoPage(targetPage);\r\n  }","/* ================================================== HeaderPage ==================================================\r\nImports module */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// React Router - ES6 modules\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n// Style\r\nimport { NavBarStyle, CommonBtnStyle, specificBtnStyle } from'../Style/NavBarStyle';\r\nimport { HeaderStyle, MainContentStyle  } from '../Style/MainStyle';\r\n\r\n// Generall components\r\nimport  fredrikLogo from'../Data/bilder/logga_small.png';\r\nimport { runGoToPage } from'../Data/CommonFunctions';\r\nimport { Button } from'../Data/Button';\r\nimport { runAppUrl } from'../Data/AppUrl';\r\nimport { navRouteName } from'../Data/NavRouteName';\r\n\r\nexport const HeaderContent = (props) => {\r\n  let [ appName, updateAppName ] = useState('');\r\n  let [ urlChanged, updateUrlChanged ] = useState(false);\r\n  let [ redirectionPath, updateRedirectionPath ] = useState('');\r\n  let [ currentUrl, updateCurrentUrl ] = useState('');\r\n  \r\n  const { content } = props;\r\n  //let [ correctAppUrl, setCorrectAppUrl ] = useState('');\r\n  useEffect(() => {\r\n    updateAppName('Fredrik Webbpage');\r\n  },[ appName, redirectionPath ]);\r\n  \r\n  console.log(\"runAppUrl\", runAppUrl())\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {(runAppUrl() !== '/Welcome')\r\n          ?\r\n            <specificBtnStyle.logoBtn onClick={ runGoToPage } id=\"welcome\">\r\n              <HeaderStyle.appLogoLink src={ fredrikLogo } alt=\"Fredriks logga!\" id=\"welcome\" onClick={ runGoToPage }/>\r\n            </specificBtnStyle.logoBtn>\r\n          : \r\n            <specificBtnStyle.logo>\r\n              <HeaderStyle.appLogoLink src={ fredrikLogo } alt=\"Fredriks logga!\" id=\"mainPage\" onClick={ runGoToPage }/>\r\n            </specificBtnStyle.logo>\r\n        }\r\n        <NavBarStyle.topBarContainer>\r\n          <NavBarStyle.contentContainer>\r\n          <Button\r\n            styleBtn={ runAppUrl() !== '/Utveckling' && specificBtnStyle.btnInactive || specificBtnStyle.btnActive }\r\n            content={ runAppUrl() !== '/Utveckling' \r\n              && <CommonBtnStyle.btnHeadline id={ navRouteName.headLine1.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPageInactive }>{ navRouteName.headLine1.name }</CommonBtnStyle.btnHeadline> \r\n              ||\r\n                <>\r\n                  <CommonBtnStyle.btnHeadline id={ navRouteName.headLine1.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPageActive }>{ navRouteName.headLine1.name }</CommonBtnStyle.btnHeadline>\r\n                  <CommonBtnStyle.btnMarker></CommonBtnStyle.btnMarker>\r\n                </>\r\n            }\r\n            onClickFunction={runGoToPage}\r\n            id={ navRouteName.headLine1.id }\r\n            groupName={ 'headLine1' }\r\n          />\r\n{/*           <Button\r\n            styleBtn={ runAppUrl() !== '/MinaProjekt' && specificBtnStyle.btnInactive || specificBtnStyle.btnActive }\r\n            content={ runAppUrl() !== '/MinaProjekt' \r\n              && <CommonBtnStyle.btnHeadline id={ navRouteName.headLine2.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPageInactive }>{ navRouteName.headLine2.name }</CommonBtnStyle.btnHeadline> \r\n              ||\r\n                <>\r\n                  <CommonBtnStyle.btnHeadline id={ navRouteName.headLine2.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPageActive }>{ navRouteName.headLine2.name }</CommonBtnStyle.btnHeadline>\r\n                  <CommonBtnStyle.btnMarker></CommonBtnStyle.btnMarker>\r\n                </>\r\n            }\r\n            onClickFunction={runGoToPage}\r\n            id={ navRouteName.headLine2.id }\r\n            /> */}\r\n            </NavBarStyle.contentContainer>\r\n            <specificBtnStyle.lastNavPageContainer>\r\n            <Button\r\n              styleBtn={ runAppUrl() !== '/OmMig' && specificBtnStyle.btnInactive || specificBtnStyle.btnActive}\r\n              content={runAppUrl() !== '/OmMig'\r\n              && <CommonBtnStyle.btnHeadline id={ navRouteName.lastHeadLine.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPageInactive }>{ navRouteName.lastHeadLine.name }</CommonBtnStyle.btnHeadline> \r\n              ||\r\n                <>\r\n                  <CommonBtnStyle.btnHeadline id={ navRouteName.lastHeadLine.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPageActive }>{ navRouteName.lastHeadLine.name }</CommonBtnStyle.btnHeadline>\r\n                  <CommonBtnStyle.btnMarker></CommonBtnStyle.btnMarker>\r\n                </>\r\n\r\n              }\r\n              onClickFunction={runGoToPage}\r\n              id={ navRouteName.lastHeadLine.id }\r\n            />\r\n          </specificBtnStyle.lastNavPageContainer>\r\n\r\n     \r\n        </NavBarStyle.topBarContainer>\r\n        \r\n        </>\r\n        <>\r\n\r\n        </>\r\n      </>\r\n    );\r\n  }","/* ================================================== FirstPage ==================================================\r\nImports module */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// React Router - ES6 modules\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n// Style\r\nimport { CommonBtnStyle, specificBtnStyle } from'../Style/NavBarStyle';\r\nimport { MainContentStyle, SubPageContainerStyle } from'../Style/MainStyle';\r\nimport { CommonTextStyle } from'../Style/TextStyle';\r\n\r\n// Generall components\r\nimport { incommingTextObj$ } from'../Data/Storage';\r\nimport { gotoPage$ } from'../Data/Storage';\r\nimport Spinner from '../Data/Spinner.js';\r\nimport { Button } from'../Data/Button';\r\nimport { runGoToPage } from'../Data/CommonFunctions';\r\nimport { HeaderContent } from'./HeaderContent';\r\nimport { navRouteName } from'../Data/NavRouteName';\r\n\r\nexport const Development = () => {\r\n    const [ textObj, updateTextObj ] = useState('');\r\n    const [ newTextObj, updateNewTextObj ] = useState(true);\r\n    const [ pageRoute, setPageRoute ] = useState('');\r\n\r\n    useEffect(() => {\r\n      if (newTextObj === true) {\r\n        incommingTextObj$.subscribe((incommingTextObj) => {\r\n        console.log(\"MainPage -> incommingTextObj\", incommingTextObj)\r\n          if (newTextObj === true){\r\n            updateTextObj(incommingTextObj.services);\r\n            updateNewTextObj(false);\r\n          }\r\n        });\r\n      }\r\n      gotoPage$.subscribe((gotoPage) => {\r\n        console.log(\"MainApp -> gotoPage\", gotoPage)\r\n        //setPageRoute(navRouteName.headLine[1].gotoPage]);\r\n      });\r\n    }, [newTextObj, textObj]);\r\n    return (\r\n      <>\r\n        <MainContentStyle.header>\r\n          <HeaderContent/>\r\n        </MainContentStyle.header>\r\n        <MainContentStyle.headerEndLine></MainContentStyle.headerEndLine>\r\n        <SubPageContainerStyle.container>\r\n          <SubPageContainerStyle.sidebar>\r\n            <Button\r\n              styleBtn={ specificBtnStyle.sideBarBtn }\r\n              content={ <CommonBtnStyle.btnHeadline id={ navRouteName.headLine1.subHead.headLine1.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPage }>{ navRouteName.headLine1.subHead.headLine1.name }</CommonBtnStyle.btnHeadline> }\r\n              onClickFunction={runGoToPage}\r\n              id={ navRouteName.headLine1.subHead.headLine1.id }\r\n            />\r\n            <Button\r\n              styleBtn={ specificBtnStyle.sideBarBtn }\r\n              content={ <CommonBtnStyle.btnHeadline id={ navRouteName.headLine1.subHead.headLine2.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPage }>{ navRouteName.headLine1.subHead.headLine2.name }</CommonBtnStyle.btnHeadline> }\r\n              onClickFunction={runGoToPage}\r\n              id={ navRouteName.headLine1.subHead.headLine2.id }\r\n            />\r\n            <Button\r\n              styleBtn={ specificBtnStyle.sideBarBtn }\r\n              content={ <CommonBtnStyle.btnHeadline id={ navRouteName.headLine1.subHead.headLine3.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPage }>{ navRouteName.headLine1.subHead.headLine3.name }</CommonBtnStyle.btnHeadline> }\r\n              onClickFunction={runGoToPage}\r\n              id={ navRouteName.headLine1.subHead.headLine3.id }\r\n            />\r\n          </SubPageContainerStyle.sidebar>\r\n          <SubPageContainerStyle.mainContent>\r\n          <CommonTextStyle.headLines>\r\n            Webbtjänster\r\n          </CommonTextStyle.headLines>\r\n            <SubPageContainerStyle.textParagraph>\r\n              {(textObj !== undefined)\r\n                ?  `${textObj}`\r\n                : <Spinner str={'Text laddas'}/>\r\n              } \r\n            </SubPageContainerStyle.textParagraph>\r\n          </SubPageContainerStyle.mainContent>\r\n        </SubPageContainerStyle.container>\r\n      </>\r\n    );\r\n  }","/* ================================================== FooterPage ==================================================\r\nImports module */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// React Router - ES6 modules\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n// Style\r\nimport { FooterStyle } from '../Style/MainStyle';\r\nimport { startDateTime } from'../Data/DateTime';\r\n\r\n// Generall components\r\n\r\n\r\nconst FooterContent = () => {\r\n    let [ appName, updateAppName ] = useState('');\r\n    let [ addDateTime ] = useState(startDateTime());\r\n\r\n    useEffect(() => {\r\n      updateAppName('Fredrik Webbpage');\r\n    },[ appName ]);\r\n    return (\r\n        <>\r\n          <FooterStyle.col1>Copyright: Fredrik Hjärpe</FooterStyle.col1>\r\n   {/*        <a href=\"data_struktur/kontakt_form.html\" title=\"Kontakt formulär\"><img class=\"contact_form\" src=\"data_struktur/bilder/contact_form.png\" titl=\"\" alt=\"Kontakt formulär!\"></a>\r\n */}\r\n          <FooterStyle.col2>Kontakt formulär!</FooterStyle.col2>\r\n          <FooterStyle.col3>{ addDateTime }</FooterStyle.col3>\r\n        </>\r\n\r\n    );\r\n  }\r\n\r\nexport default FooterContent;","// Date and time\r\nexport const startDateTime = () =>{\r\n    let today = new Date();\r\n        \r\n    //  Visa datum\r\n    let dd = today.getDate();\r\n        \r\n    // Visa månadens namn   \r\n    let month = new Array();                   \r\n\r\n    month[0] = \"Januari\";\r\n    month[1] = \"Februari\";\r\n    month[2] = \"Mars\";\r\n    month[3] = \"April\";\r\n    month[4] = \"Maj\";\r\n    month[5] = \"Juni\";\r\n    month[6] = \"Juli\";\r\n    month[7] = \"Augusti\";\r\n    month[8] = \"September\";\r\n    month[9] = \"Oktober\";\r\n    month[10] = \"November\";\r\n    month[11] = \"December\";\r\n\r\n    let monthnr = new Date();\r\n    let monthname = month[monthnr.getMonth()];\r\n                \r\n    let yyyy = today.getFullYear();\r\n        \r\n    // Visa tid \r\n    let h = today.getHours();\r\n    let m = today.getMinutes();\r\n    m = checkTime(m);\r\n\r\n    // Infoga allt och presentera i namngiven div\r\n    let dateTimeStr = `${dd} ${monthname} ${yyyy} | ${h}:${m}`;\r\n\r\n    setTimeout(startDateTime, 500);\r\n\r\n    function checkTime(i)\r\n    {\r\n        if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\r\n        return i;\r\n    }\r\n    return dateTimeStr;\r\n}","/* ================================================== FirstPage ==================================================\r\nImports module */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// React Router - ES6 modules\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n// Style\r\nimport { CommonBtnStyle, specificBtnStyle } from'../Style/NavBarStyle';\r\nimport { MainContentStyle, SubPageContainerStyle } from'../Style/MainStyle';\r\nimport { CommonTextStyle } from'../Style/TextStyle';\r\n\r\n// Generall components\r\nimport { incommingTextObj$ } from'../Data/Storage';\r\nimport { gotoPage$ } from'../Data/Storage';\r\nimport Spinner from '../Data/Spinner.js';\r\nimport { Button } from'../Data/Button';\r\nimport { runGoToPage } from'../Data/CommonFunctions';\r\nimport { HeaderContent } from'./HeaderContent';\r\nimport { navRouteName } from'../Data/NavRouteName';\r\n\r\nexport const MyProjects = () => {\r\n    const [ textObj, updateTextObj ] = useState('');\r\n    const [ newTextObj, updateNewTextObj ] = useState(true);\r\n    const [ pageRoute, setPageRoute ] = useState('');\r\n\r\n    useEffect(() => {\r\n      if (newTextObj === true) {\r\n        incommingTextObj$.subscribe((incommingTextObj) => {\r\n        console.log(\"MainPage -> incommingTextObj\", incommingTextObj)\r\n          if (newTextObj === true){\r\n            updateTextObj(incommingTextObj.services);\r\n            updateNewTextObj(false);\r\n          }\r\n        });\r\n      }\r\n      gotoPage$.subscribe((gotoPage) => {\r\n        console.log(\"MainApp -> gotoPage\", gotoPage)\r\n        //setPageRoute(navRouteName.headLine[1].gotoPage]);\r\n      });\r\n    }, [newTextObj, textObj]);\r\n    return (\r\n      <>\r\n        <MainContentStyle.header>\r\n          <HeaderContent/>\r\n        </MainContentStyle.header>\r\n        <MainContentStyle.headerEndLine></MainContentStyle.headerEndLine>\r\n        <SubPageContainerStyle.container>\r\n          <SubPageContainerStyle.sidebar>\r\n            <Button\r\n              styleBtn={ specificBtnStyle.sideBarBtn }\r\n              content={ <CommonBtnStyle.btnHeadline id={ navRouteName.headLine1.subHead.headLine1.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPage }>{ navRouteName.headLine1.subHead.headLine1.name }</CommonBtnStyle.btnHeadline> }\r\n              onClickFunction={runGoToPage}\r\n              id={ navRouteName.headLine1.subHead.headLine1.id }\r\n            />\r\n            <Button\r\n              styleBtn={ specificBtnStyle.sideBarBtn }\r\n              content={ <CommonBtnStyle.btnHeadline id={ navRouteName.headLine1.subHead.headLine2.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPage }>{ navRouteName.headLine1.subHead.headLine2.name }</CommonBtnStyle.btnHeadline> }\r\n              onClickFunction={runGoToPage}\r\n              id={ navRouteName.headLine1.subHead.headLine2.id }\r\n            />\r\n            <Button\r\n              styleBtn={ specificBtnStyle.sideBarBtn }\r\n              content={ <CommonBtnStyle.btnHeadline id={ navRouteName.headLine1.subHead.headLine3.id } onClick={ runGoToPage } style={ specificBtnStyle.lastNavPage }>{ navRouteName.headLine1.subHead.headLine3.name }</CommonBtnStyle.btnHeadline> }\r\n              onClickFunction={runGoToPage}\r\n              id={ navRouteName.headLine1.subHead.headLine3.id }\r\n            />\r\n          </SubPageContainerStyle.sidebar>\r\n          <SubPageContainerStyle.mainContent>\r\n          <CommonTextStyle.headLines>\r\n            Webbtjänster\r\n          </CommonTextStyle.headLines>\r\n            <SubPageContainerStyle.textParagraph>\r\n              {(textObj !== undefined)\r\n                ?  `${textObj}`\r\n                : <Spinner str={'Text laddas'}/>\r\n              } \r\n            </SubPageContainerStyle.textParagraph>\r\n          </SubPageContainerStyle.mainContent>\r\n        </SubPageContainerStyle.container>\r\n      </>\r\n    );\r\n  }","/* ================================================== FirstPage ==================================================\r\nImports module */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Style\r\nimport { CommonBtnStyle, specificBtnStyle } from'../Style/NavBarStyle';\r\nimport { MainContentStyle, PageMainContainerStyle } from'../Style/MainStyle';\r\nimport { CommonTextStyle } from'../Style/TextStyle';\r\n\r\n// Generall components\r\nimport { incommingTextObj$ } from'../Data/Storage';\r\nimport Spinner from '../Data/Spinner.js';\r\nimport { Button } from'../Data/Button';\r\nimport { runGoToPage } from'../Data/CommonFunctions';\r\nimport { HeaderContent } from'./HeaderContent';\r\nimport { navRouteName } from'../Data/NavRouteName';\r\n\r\nexport const AbouteMe = () => {\r\n    const [ textObj, updateTextObj ] = useState('');\r\n    const [ newTextObj, updateNewTextObj ] = useState(true);\r\n\r\n    useEffect(() => {\r\n      if (newTextObj === true) {\r\n        incommingTextObj$.subscribe((incommingTextObj) => {\r\n        console.log(\"MainPage -> incommingTextObj\", incommingTextObj)\r\n          if (newTextObj === true){\r\n            updateTextObj(incommingTextObj.aboutMe);\r\n            updateNewTextObj(false);\r\n          }\r\n        });\r\n      }\r\n    }, [newTextObj, textObj]);\r\n    return (\r\n      <>\r\n        <MainContentStyle.header>\r\n          <HeaderContent/>\r\n        </MainContentStyle.header>\r\n        <MainContentStyle.headerEndLine></MainContentStyle.headerEndLine>\r\n        <PageMainContainerStyle.mainPage>\r\n          <CommonTextStyle.headLines>\r\n            Om Mig\r\n          </CommonTextStyle.headLines>\r\n          <CommonTextStyle.textParagraph>\r\n            {(textObj !== undefined)\r\n              ?  'Text kommer snart ...................' //`${textObj}`\r\n            : <Spinner str={'Text laddas'}/>\r\n            } \r\n          </CommonTextStyle.textParagraph>\r\n        </PageMainContainerStyle.mainPage>\r\n      </>\r\n    );\r\n  }","/* ================================================== MainPage ==================================================\r\nImports module */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// React Router - ES6 modules\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n// Style\r\nimport { MainContentStyle, PageMainContainerStyle } from'./Components/Style/MainStyle';\r\nimport { CommonTextStyle } from'./Components/Style/TextStyle';\r\nimport { specificBtnStyle, CommonBtnStyle } from'./Components/Style/NavBarStyle';\r\n\r\n// Generall components\r\nimport { HeaderContent } from'./Components/Structure/HeaderContent';\r\nimport { runGoToPage } from'./Components/Data/CommonFunctions';\r\nimport { incommingTextObj$ } from'./Components/Data/Storage';\r\nimport Spinner from './Components/Data/Spinner.js';\r\nimport { navRouteName } from'./Components/Data/NavRouteName';\r\nimport { Button } from'./Components/Data/Button';\r\n\r\nexport const MainPage = () => {\r\n  const [ textObj, updateTextObj ] = useState('');\r\n  const [ newTextObj, updateNewTextObj ] = useState(true);\r\n  useEffect(() => {\r\n    if (newTextObj === true) \r\n\r\n    incommingTextObj$.subscribe((incommingTextObj) => {\r\n    console.log(\"MainPage -> incommingTextObj\", incommingTextObj.textMain)\r\n      if (newTextObj === true){\r\n        updateTextObj(incommingTextObj.textMain);\r\n        updateNewTextObj(false);\r\n      }\r\n    });\r\n  }, [newTextObj, textObj]);\r\n  \r\n  console.log(\"MainPage -> incommingTextObj\", typeof textObj)\r\n  \r\n  return (\r\n    <>\r\n      <MainContentStyle.header>\r\n        <HeaderContent/>\r\n      </MainContentStyle.header>\r\n      <MainContentStyle.headerEndLine></MainContentStyle.headerEndLine>\r\n      <PageMainContainerStyle.mainPage>\r\n        <CommonTextStyle.headLines>\r\n          Välkommen In\r\n        </CommonTextStyle.headLines>\r\n        <CommonTextStyle.textParagraph>\r\n          {(textObj !== undefined)\r\n            ?  `${textObj}`\r\n          : <Spinner str={'Text laddas'}/>\r\n          } \r\n        </CommonTextStyle.textParagraph>\r\n      </PageMainContainerStyle.mainPage>\r\n    </>\r\n  );\r\n}","/* ================================================== MainApp ==================================================\r\nImports module */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport {Helmet} from \"react-helmet\";\r\n// React Router - ES6 modules\r\nimport { HashRouter, Route, Redirect, Link } from \"react-router-dom\";\r\n\r\n// Style\r\nimport { MainStyle, MainContentStyle, FooterStyle } from './Components/Style/MainStyle';\r\nimport { specificBtnStyle } from'./Components/Style/NavBarStyle';\r\n\r\n// Generall components\r\nimport { Development } from'./Components/Structure/Development';\r\nimport FooterContent from'./Components/Structure/FooterContent';\r\nimport { MyProjects } from'./Components/Structure/MyProjects';\r\nimport { navRouteName } from'./Components/Data/NavRouteName';\r\nimport { AbouteMe } from'./Components/Structure/AbouteMe';\r\nimport { gotoPage$ } from'./Components/Data/Storage';\r\nimport { runAppUrl } from'./Components/Data/AppUrl';\r\nimport { MainPage } from'./MainPage';\r\nimport { HeaderContent } from'./Components/Structure/HeaderContent';\r\n\r\nimport { from } from 'rxjs';\r\nconst MainApp = () => {\r\n  const [ appName, updateAppName ] = useState('');\r\n  const [ pageRoute, setPageRoute ] = useState('');\r\n  \r\n  useEffect(() => {\r\n    updateAppName('Fredrik Webbpage');\r\n    gotoPage$.subscribe((gotoPage) => {\r\n      console.log(\"MainApp -> gotoPage\", gotoPage)\r\n      setPageRoute( gotoPage);\r\n    });\r\n  },[ appName, pageRoute ]);\r\n  console.log(\"MainApp -> runAppUrl()\", runAppUrl())\r\n  \r\n  console.log(\"MainApp -> pageRoute\", pageRoute)\r\n\r\n  return (\r\n    <MainStyle.body>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>{`${appName}`}</title>\r\n      </Helmet>\r\n      <HashRouter basename='/'>\r\n        {pageRoute === '' /* navRouteName.headLine0.id */ && <Redirect to={ `/${navRouteName.headLine0.route}`}/>}\r\n        <Route exact path={`/${navRouteName.headLine0.route}`} component={ MainPage } />\r\n        {pageRoute === navRouteName.headLine1.id && <Redirect to={ `/${navRouteName.headLine1.route}`}/>}\r\n        <Route exact path={`/${navRouteName.headLine1.route}`} component={ Development } />\r\n        {pageRoute === navRouteName.headLine2.id && <Redirect to={ `/${navRouteName.headLine2.route}`}/>}\r\n        <Route exact path={`/${navRouteName.headLine2.route}`} component={ MyProjects } />           \r\n        {pageRoute === navRouteName.lastHeadLine.id && <Redirect to={ `/${navRouteName.lastHeadLine.route}`}/>}\r\n        <Route exact path={`/${navRouteName.lastHeadLine.route}`} component={ AbouteMe } />\r\n      </HashRouter>\r\n        <FooterStyle.footerContainer>\r\n          <FooterContent/>\r\n        </FooterStyle.footerContainer>\r\n    </MainStyle.body> \r\n  );\r\n}\r\n\r\nexport default MainApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from './MainApp';\r\nimport './Components/Style/MainStyle.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <MainApp />,\r\n  //</React.StrictMode>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}